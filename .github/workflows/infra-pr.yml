name: Infrastructure Plan for Pull Request

on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/infra-pr.yaml'
  workflow_dispatch:
env:
  TF_LOG: INFO
  TF_VERSION: 1.2.7
  environment: dev
  TF_WORKING_DIR: "./terraform"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  plan-infrastructure:
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.plan.outputs.stdout }}
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: |
          terraform init
          terraform workspace select ${{env.environment}} || terraform workspace new ${{env.environment}}

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan -no-color -out=tfplan -var-file=terraform.tfvars

      - name: Transform plan
        id: plan
        run: |
          terraform show  -no-color tfplan

  publish-plans:
    needs: [plan-infrastructure]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 'Comment PR'
        uses: actions/github-script@v5
        env:
          DEV_PLAN: ${{ needs.plan-infrastructure.outputs.plan }}
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            const dev_plan = process.env.DEV_PLAN
            const note_if_changes = plan => plan.includes("Terraform will perform the following actions") ? "- <b>INCLUDES CHANGES</b>" : ""
            // This empty line is on purpose so that details are rendered correctly in gh
            let message = `<details><summary>Show dev infrastructure plan ${note_if_changes(dev_plan)}</summary>

            \`\`\`${dev_plan}\`\`\`
            </details>`
            github.rest.issues.createComment({ issue_number, owner, repo, body: message });